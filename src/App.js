import React, { useState } from 'react';
import axios from 'axios';

function App() {
  const [text, setText] = useState('');
  const [emoji, setEmoji] = useState('');

  // ‡∏ï‡∏≤‡∏£‡∏≤‡∏á mapping
  const emojiMap = {
    "0": "üôÇ",
    "1": "üò¢",
    "2": "üò°",
    "3": "üòë",
    "4": "üò±",
    "5": "üòì",
    "6": "ü§î",
    "7": "üò¥",
    "8": "üòù",
    "9": "üòç",
    "10": "üòå",
    "11": "üòê",
    "12": "üòÅ",
    "13": "üò≥",
    "14": "üòµ",
    "15": "üíî",
    "16": "üòé",
    "17": "üò≠",
    "18": "üòÖ",
    "19": "üòä",
    "20": "üíú",
    "21": "ü•∫"
  };

  const predictEmoji = async () => {
    try {
      const response = await axios.get('https://api.aiforthai.in.th/emoji', {
        params: { text },
        headers: {
          Apikey: process.env.REACT_APP_EMOJI_API_KEY
        }
      });

      const probabilities = response.data;
      console.log('‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:', probabilities);

      // ‡∏´‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ probability ‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
      let maxId = null;
      let maxProb = -1;

      Object.entries(probabilities).forEach(([id, probStr]) => {
        const prob = parseFloat(probStr);
        if (prob > maxProb) {
          maxProb = prob;
          maxId = id;
        }
      });

      // Map ‡πÄ‡∏õ‡πá‡∏ô emoji
      const predictedEmoji = emojiMap[maxId] || '‚ùì';

      setEmoji(predictedEmoji);
    } catch (err) {
      console.error(err);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + err.message);
    }
  };

  return (
    <div style={{ padding: 30 }}>
      <h1>AIForThai Emoji Prediction</h1>
      <input
        type="text"
        value={text}
        placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"
        onChange={e => setText(e.target.value)}
        style={{ width: 300 }}
      />
      <button onClick={predictEmoji}>‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢</button>
      {emoji && (
        <h2>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: {emoji}</h2>
      )}
    </div>
  );
}

export default App;
